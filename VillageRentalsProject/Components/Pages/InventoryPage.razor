@page "/inventory"

<div style="position: fixed; top: 0; left: 250px; width: calc(100% - 232px); height: 64px; background-color: #CCCCCC; display: flex; justify-content: center; align-items: center; z-index: 1000;">
	<div style="display: flex; gap: 32px;">
		<button type="button" @onclick="ShowAddEquipmentPage" style="height: 36px; width: 160px; border: 2px solid #215456; border-radius: 4px; background-color: #215456; color: white; font-weight: 600;">
			Add Equipment
		</button>
		<button type="button" @onclick="ShowEquipmentListPage" style="height: 36px; width: 160px; border: 2px solid #215456; border-radius: 4px; background-color: #215456; color: white; font-weight: 600;">
			Equipment List
		</button>
	</div>
</div>

<div style="padding: 4px; margin-top: 64px;">
	@if (addEquipmentPage)
	{
		<h1 style="color: white; text-align: center; font-weight: 600;">Add Equipment</h1>
		<div style="display: flex; justify-content: center; align-items: center;">
			<form style="display: flex; gap: 16px; flex-direction: column; width: 90%;">
				<div style="margin-bottom: 8px;">
					<label style="color: white; font-size: 18px; font-weight: 500; margin-bottom: 6px;">Equipment Name:</label>
					<input style="border: 2px; border-radius: 12px; height: 36px; width: 100%;" type="text" @bind="equipmentName" required />
				</div>
				<div style="margin-bottom: 8px;">
					<label style="color: white; font-size: 18px; font-weight: 500; margin-bottom: 6px;">Category Id:</label>
					<input style="border: 2px; border-radius: 12px; height: 36px; width: 100%;" type="text" @bind="categoryId" required />
				</div>
				<div style="margin-bottom: 8px;">
					<label style="color: white; font-size: 18px; font-weight: 500; margin-bottom: 6px;">Status:</label>
					<input style="border: 2px; border-radius: 12px; height: 36px; width: 100%;" type="text" @bind="status" required />
				</div>
				<div style="margin-bottom: 8px;">
					<label style="color: white; font-size: 18px; font-weight: 500; margin-bottom: 6px;">Daily Rate:</label>
					<input style="border: 2px; border-radius: 12px; height: 36px; width: 100%;" type="text" @bind="dailyRate" required />
				</div>
				<div style="margin-bottom: 8px;">
					<label style="color: white; font-size: 18px; font-weight: 500; margin-bottom: 6px;">Description:</label>
					<textarea style="border: 2px; border-radius: 12px; height: 68px; width: 100%;" type="text" @bind="description" required />
				</div>
				<div style="display: flex; justify-content: center; align-items: center;">
					<button style="height: 48px; background-color: forestgreen; width: 35%; border-radius: 12px; color: white;" type="submit" @onclick="HandleSubmit" > Save </button>
				</div>
			</form>
		</div>
	}
	@if (equipmentListPage)
	{
		<h1 style="text-align: center; color: white; font-weight: 600;">Equipment List</h1>
		<div style="width: 100%; height: 4px; border-radius: 2px; margin-top: 16px; background-color: white;"></div>
		<div style="width: 100%; gap: 24px;">
			@foreach (Equipment equipment in equipmentList)
			{
				<div style="display: flex; flex-direction: column; padding: 12px; align-items: center; flex: 1; width: 100%; background-color: #cccccc; border-radius: 12px; border: 2px; border-color: white; margin-top: 12px;">
					<h3 style="font-size: 18px; font-weight: 600;">$@equipment.DailyRate</h3>
					<h3 style="font-size: 18px; font-weight: 600;">@equipment.EquipmentName</h3>
					<p style="font-size: 16px; font-weight: 500;">@equipment.Description</p> 
					<button type="button" @onclick="async () => await DeleteEquipment(equipment.EquipmentId)" style="border: 1.5px solid white; display: flex; width: 156px; height: 36px; justify-content: center; align-items: center; border-radius: 12px; background-color: firebrick">
						<h3 style="color: white; text-align: center; font-size: 14px; font-weight: 600;">Delete Equipment</h3>
					</button>
				</div>
			}
		</div>

	}
</div>

@code {

	public List<Equipment> equipmentList = new();

	private Guid equipmentId;
	private string categoryId;
	private string equipmentName;
	private string status;
	private string dailyRate;
	private string description;

	private bool addEquipmentPage = true;
	private bool equipmentListPage;
	private bool modifyEquipmentPage;

	private void ShowAddEquipmentPage()
	{
		addEquipmentPage = true;
		equipmentListPage = false;
		modifyEquipmentPage = false;
	}

	private void ShowEquipmentListPage()
	{
		addEquipmentPage = false;
		equipmentListPage = true;
		modifyEquipmentPage = false;
	}


	protected override async Task OnInitializedAsync()
	{
		await Task.Delay(100);
		EquipmentService service = new();

		equipmentList = service.GetEquipmentList();
	}


	public async Task HandleSubmit() 
	{
		EquipmentService service = new();

		Equipment equipment = new Equipment(equipmentId = Guid.NewGuid(), categoryId, equipmentName, status, dailyRate, description);

		service.AddEquipment(equipment);

		await Task.Delay(1000);

	}

	public async Task DeleteEquipment(Guid id)
	{
		EquipmentService service = new();

		Equipment deletedEquipment = service.GetEquipment(id);

		List<Equipment> updatedList = new();

		if (deletedEquipment != null)
		{
			service.RemoveEquipment(deletedEquipment);

			equipmentList.Remove(deletedEquipment);
		}

		equipmentList = service.GetEquipmentList();

		await Task.Delay(100);

	}

}